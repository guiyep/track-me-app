// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CloudStack should stack be defined properly 1`] = `
{
  "Outputs": {
    "GpsSnsStackGpsSnsTopicArnBD0B9FF0": {
      "Description": "The ARN of the GPS SNS topic",
      "Value": {
        "Ref": "GpsSnsStackGpsLocationTopicC7DF29B6",
      },
    },
    "GpsSnsStackGpsSnsTopicSubscribers17ADBEE9": {
      "Value": {
        "Fn::Join": {
          "0": "",
          "1": {
            "0": {
              "Fn::GetAtt": {
                "0": "ReportQueueStackReportQueueDDD250C3",
                "1": "Arn",
              },
            },
            "1": " - ["location-added","settings-added"]",
          },
        },
      },
    },
    "MainApiStackMainApiGatewayEndpoint9CB3E853": {
      "Value": {
        "Fn::Join": {
          "0": "",
          "1": {
            "0": "https://",
            "1": {
              "Ref": "MainApiStackMainApiGatewayF91BF44C",
            },
            "2": ".execute-api.",
            "3": {
              "Ref": "AWS::Region",
            },
            "4": ".",
            "5": {
              "Ref": "AWS::URLSuffix",
            },
            "6": "/",
            "7": {
              "Ref": "MainApiStackMainApiGatewayDeploymentStageprodA67525DE",
            },
            "8": "/",
          },
        },
      },
    },
    "ReportQueueStackReportQueueArn2A1BB139": {
      "Value": {
        "Fn::GetAtt": {
          "0": "ReportQueueStackReportQueueDDD250C3",
          "1": "Arn",
        },
      },
    },
    "ReportQueueStackReportQueueDlqUrl720014D1": {
      "Value": {
        "Ref": "ReportQueueStackGpsDLQ62507C3E",
      },
    },
    "ReportQueueStackReportQueueEventSourcingAAF6B94A": {
      "Value": {
        "Fn::Join": {
          "0": "",
          "1": {
            "0": "fn:",
            "1": {
              "Ref": "ReportProcessorStackReportProcessorLambda92720B8A",
            },
            "2": " - queue:",
            "3": {
              "Fn::GetAtt": {
                "0": "ReportQueueStackReportQueueDDD250C3",
                "1": "Arn",
              },
            },
          },
        },
      },
    },
    "ReportQueueStackReportQueueUrlA6277750": {
      "Value": {
        "Ref": "ReportQueueStackReportQueueDDD250C3",
      },
    },
    "ReportTableStackReportsGraphqlApiKEY7FCBC310": {
      "Value": {
        "Fn::GetAtt": {
          "0": "ReportTableStackReportsGraphqlApiDefaultApiKey667606E1",
          "1": "ApiKey",
        },
      },
    },
    "ReportTableStackReportsGraphqlApiURL1E1C9412": {
      "Value": {
        "Fn::GetAtt": {
          "0": "ReportTableStackReportsGraphqlApiBB0F61B5",
          "1": "GraphQLUrl",
        },
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "GpsSnsStackGpsLocationTopicC7DF29B6": {
      "Type": "AWS::SNS::Topic",
    },
    "GpsTableStackGpsLocations75E41656": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": {
          "0": {
            "AttributeName": "partitionKey",
            "AttributeType": "S",
          },
          "1": {
            "AttributeName": "sortKey",
            "AttributeType": "S",
          },
        },
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": {
          "0": {
            "AttributeName": "partitionKey",
            "KeyType": "HASH",
          },
          "1": {
            "AttributeName": "sortKey",
            "KeyType": "RANGE",
          },
        },
        "Replicas": {
          "0": {
            "Region": {
              "Ref": "AWS::Region",
            },
          },
        },
        "TableName": "GpsLocations",
      },
      "Type": "AWS::DynamoDB::GlobalTable",
      "UpdateReplacePolicy": "Retain",
    },
    "MainApiStackMainApiGatewayANYApiPermissionCloudStackMainApiStackMainApiGateway2ED322B0ANYD3C02722": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": {
            "0": "MainApiStackMainApiLambda4A8B4853",
            "1": "Arn",
          },
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": {
            "0": "",
            "1": {
              "0": "arn:",
              "1": {
                "Ref": "AWS::Partition",
              },
              "10": "/*/",
              "2": ":execute-api:",
              "3": {
                "Ref": "AWS::Region",
              },
              "4": ":",
              "5": {
                "Ref": "AWS::AccountId",
              },
              "6": ":",
              "7": {
                "Ref": "MainApiStackMainApiGatewayF91BF44C",
              },
              "8": "/",
              "9": {
                "Ref": "MainApiStackMainApiGatewayDeploymentStageprodA67525DE",
              },
            },
          },
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MainApiStackMainApiGatewayANYApiPermissionTestCloudStackMainApiStackMainApiGateway2ED322B0ANYCEBDB81D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": {
            "0": "MainApiStackMainApiLambda4A8B4853",
            "1": "Arn",
          },
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": {
            "0": "",
            "1": {
              "0": "arn:",
              "1": {
                "Ref": "AWS::Partition",
              },
              "2": ":execute-api:",
              "3": {
                "Ref": "AWS::Region",
              },
              "4": ":",
              "5": {
                "Ref": "AWS::AccountId",
              },
              "6": ":",
              "7": {
                "Ref": "MainApiStackMainApiGatewayF91BF44C",
              },
              "8": "/test-invoke-stage/*/",
            },
          },
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MainApiStackMainApiGatewayANYCECA7D84": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": {
              "0": "",
              "1": {
                "0": "arn:",
                "1": {
                  "Ref": "AWS::Partition",
                },
                "2": ":apigateway:",
                "3": {
                  "Ref": "AWS::Region",
                },
                "4": ":lambda:path/2015-03-31/functions/",
                "5": {
                  "Fn::GetAtt": {
                    "0": "MainApiStackMainApiLambda4A8B4853",
                    "1": "Arn",
                  },
                },
                "6": "/invocations",
              },
            },
          },
        },
        "ResourceId": {
          "Fn::GetAtt": {
            "0": "MainApiStackMainApiGatewayF91BF44C",
            "1": "RootResourceId",
          },
        },
        "RestApiId": {
          "Ref": "MainApiStackMainApiGatewayF91BF44C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "MainApiStackMainApiGatewayAccount2843A3C0": {
      "DeletionPolicy": "Retain",
      "DependsOn": {
        "0": "MainApiStackMainApiGatewayF91BF44C",
      },
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": {
            "0": "MainApiStackMainApiGatewayCloudWatchRole0E81662E",
            "1": "Arn",
          },
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "MainApiStackMainApiGatewayCloudWatchRole0E81662E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": {
            "0": {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          },
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": {
          "0": {
            "Fn::Join": {
              "0": "",
              "1": {
                "0": "arn:",
                "1": {
                  "Ref": "AWS::Partition",
                },
                "2": ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              },
            },
          },
        },
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "MainApiStackMainApiGatewayDeploymentCB676F040a9b4507e9be4798029b6a5a631bbd55": {
      "DependsOn": {
        "0": "MainApiStackMainApiGatewayproxyANYB1DF131C",
        "1": "MainApiStackMainApiGatewayproxy366500E1",
        "2": "MainApiStackMainApiGatewayANYCECA7D84",
      },
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "MainApiStackMainApiGatewayF91BF44C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "MainApiStackMainApiGatewayDeploymentStageprodA67525DE": {
      "DependsOn": {
        "0": "MainApiStackMainApiGatewayAccount2843A3C0",
      },
      "Properties": {
        "DeploymentId": {
          "Ref": "MainApiStackMainApiGatewayDeploymentCB676F040a9b4507e9be4798029b6a5a631bbd55",
        },
        "RestApiId": {
          "Ref": "MainApiStackMainApiGatewayF91BF44C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "MainApiStackMainApiGatewayF91BF44C": {
      "Properties": {
        "Name": "MainApiGateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "MainApiStackMainApiGatewayproxy366500E1": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": {
            "0": "MainApiStackMainApiGatewayF91BF44C",
            "1": "RootResourceId",
          },
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "MainApiStackMainApiGatewayF91BF44C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "MainApiStackMainApiGatewayproxyANYApiPermissionCloudStackMainApiStackMainApiGateway2ED322B0ANYproxyDB7F5AA8": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": {
            "0": "MainApiStackMainApiLambda4A8B4853",
            "1": "Arn",
          },
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": {
            "0": "",
            "1": {
              "0": "arn:",
              "1": {
                "Ref": "AWS::Partition",
              },
              "10": "/*/*",
              "2": ":execute-api:",
              "3": {
                "Ref": "AWS::Region",
              },
              "4": ":",
              "5": {
                "Ref": "AWS::AccountId",
              },
              "6": ":",
              "7": {
                "Ref": "MainApiStackMainApiGatewayF91BF44C",
              },
              "8": "/",
              "9": {
                "Ref": "MainApiStackMainApiGatewayDeploymentStageprodA67525DE",
              },
            },
          },
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MainApiStackMainApiGatewayproxyANYApiPermissionTestCloudStackMainApiStackMainApiGateway2ED322B0ANYproxyF7C1645D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": {
            "0": "MainApiStackMainApiLambda4A8B4853",
            "1": "Arn",
          },
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": {
            "0": "",
            "1": {
              "0": "arn:",
              "1": {
                "Ref": "AWS::Partition",
              },
              "2": ":execute-api:",
              "3": {
                "Ref": "AWS::Region",
              },
              "4": ":",
              "5": {
                "Ref": "AWS::AccountId",
              },
              "6": ":",
              "7": {
                "Ref": "MainApiStackMainApiGatewayF91BF44C",
              },
              "8": "/test-invoke-stage/*/*",
            },
          },
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "MainApiStackMainApiGatewayproxyANYB1DF131C": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": {
              "0": "",
              "1": {
                "0": "arn:",
                "1": {
                  "Ref": "AWS::Partition",
                },
                "2": ":apigateway:",
                "3": {
                  "Ref": "AWS::Region",
                },
                "4": ":lambda:path/2015-03-31/functions/",
                "5": {
                  "Fn::GetAtt": {
                    "0": "MainApiStackMainApiLambda4A8B4853",
                    "1": "Arn",
                  },
                },
                "6": "/invocations",
              },
            },
          },
        },
        "ResourceId": {
          "Ref": "MainApiStackMainApiGatewayproxy366500E1",
        },
        "RestApiId": {
          "Ref": "MainApiStackMainApiGatewayF91BF44C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "MainApiStackMainApiLambda4A8B4853": {
      "DependsOn": {
        "0": "MainApiStackMainApiLambdaServiceRoleDefaultPolicyFE9EF2CB",
        "1": "MainApiStackMainApiLambdaServiceRole56B3538B",
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        },
        "FunctionName": "MainApiLambda",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": {
            "0": "MainApiStackMainApiLambdaServiceRole56B3538B",
            "1": "Arn",
          },
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "MainApiStackMainApiLambdaServiceRole56B3538B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": {
            "0": {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          },
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": {
          "0": {
            "Fn::Join": {
              "0": "",
              "1": {
                "0": "arn:",
                "1": {
                  "Ref": "AWS::Partition",
                },
                "2": ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              },
            },
          },
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "MainApiStackMainApiLambdaServiceRoleDefaultPolicyFE9EF2CB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": {
            "0": {
              "Action": {
                "0": "dynamodb:BatchGetItem",
                "1": "dynamodb:GetRecords",
                "10": "dynamodb:DeleteItem",
                "11": "dynamodb:DescribeTable",
                "2": "dynamodb:GetShardIterator",
                "3": "dynamodb:Query",
                "4": "dynamodb:GetItem",
                "5": "dynamodb:Scan",
                "6": "dynamodb:ConditionCheckItem",
                "7": "dynamodb:BatchWriteItem",
                "8": "dynamodb:PutItem",
                "9": "dynamodb:UpdateItem",
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": {
                  "0": "GpsTableStackGpsLocations75E41656",
                  "1": "Arn",
                },
              },
            },
            "1": {
              "Action": "sns:Subscribe",
              "Effect": "Allow",
              "Resource": {
                "Ref": "GpsSnsStackGpsLocationTopicC7DF29B6",
              },
            },
            "2": {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "GpsSnsStackGpsLocationTopicC7DF29B6",
              },
            },
          },
          "Version": "2012-10-17",
        },
        "PolicyName": "MainApiStackMainApiLambdaServiceRoleDefaultPolicyFE9EF2CB",
        "Roles": {
          "0": {
            "Ref": "MainApiStackMainApiLambdaServiceRole56B3538B",
          },
        },
      },
      "Type": "AWS::IAM::Policy",
    },
    "ReportProcessorStackReportProcessorLambda92720B8A": {
      "DependsOn": {
        "0": "ReportProcessorStackReportProcessorLambdaServiceRoleDefaultPolicy2B97C212",
        "1": "ReportProcessorStackReportProcessorLambdaServiceRole3C6C297C",
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        },
        "FunctionName": "ReportProcessorLambda",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": {
            "0": "ReportProcessorStackReportProcessorLambdaServiceRole3C6C297C",
            "1": "Arn",
          },
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ReportProcessorStackReportProcessorLambdaServiceRole3C6C297C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": {
            "0": {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          },
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": {
          "0": {
            "Fn::Join": {
              "0": "",
              "1": {
                "0": "arn:",
                "1": {
                  "Ref": "AWS::Partition",
                },
                "2": ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              },
            },
          },
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ReportProcessorStackReportProcessorLambdaServiceRoleDefaultPolicy2B97C212": {
      "Properties": {
        "PolicyDocument": {
          "Statement": {
            "0": {
              "Action": {
                "0": "dynamodb:BatchGetItem",
                "1": "dynamodb:GetRecords",
                "10": "dynamodb:DeleteItem",
                "11": "dynamodb:DescribeTable",
                "2": "dynamodb:GetShardIterator",
                "3": "dynamodb:Query",
                "4": "dynamodb:GetItem",
                "5": "dynamodb:Scan",
                "6": "dynamodb:ConditionCheckItem",
                "7": "dynamodb:BatchWriteItem",
                "8": "dynamodb:PutItem",
                "9": "dynamodb:UpdateItem",
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": {
                  "0": "ReportTableStackReports29FDE124",
                  "1": "Arn",
                },
              },
            },
            "1": {
              "Action": {
                "0": "sqs:ReceiveMessage",
                "1": "sqs:ChangeMessageVisibility",
                "2": "sqs:GetQueueUrl",
                "3": "sqs:DeleteMessage",
                "4": "sqs:GetQueueAttributes",
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": {
                  "0": "ReportQueueStackReportQueueDDD250C3",
                  "1": "Arn",
                },
              },
            },
          },
          "Version": "2012-10-17",
        },
        "PolicyName": "ReportProcessorStackReportProcessorLambdaServiceRoleDefaultPolicy2B97C212",
        "Roles": {
          "0": {
            "Ref": "ReportProcessorStackReportProcessorLambdaServiceRole3C6C297C",
          },
        },
      },
      "Type": "AWS::IAM::Policy",
    },
    "ReportProcessorStackReportProcessorLambdaSqsEventSourceCloudStackReportQueueStackReportQueueB7E179A8DFFDE018": {
      "Properties": {
        "EventSourceArn": {
          "Fn::GetAtt": {
            "0": "ReportQueueStackReportQueueDDD250C3",
            "1": "Arn",
          },
        },
        "FunctionName": {
          "Ref": "ReportProcessorStackReportProcessorLambda92720B8A",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "ReportQueueStackGpsDLQ62507C3E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "VisibilityTimeout": 300,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "ReportQueueStackReportQueueCloudStackGpsSnsStackGpsLocationTopicC9BAEE10ADF0AFFC": {
      "DependsOn": {
        "0": "ReportQueueStackReportQueuePolicyFEFBACF9",
      },
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": {
            "0": "ReportQueueStackReportQueueDDD250C3",
            "1": "Arn",
          },
        },
        "FilterPolicy": {
          "eventType": {
            "0": "location-added",
            "1": "settings-added",
          },
        },
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "GpsSnsStackGpsLocationTopicC7DF29B6",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "ReportQueueStackReportQueueDDD250C3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "ReportQueue",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": {
              "0": "ReportQueueStackGpsDLQ62507C3E",
              "1": "Arn",
            },
          },
          "maxReceiveCount": 3,
        },
        "VisibilityTimeout": 300,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "ReportQueueStackReportQueuePolicyFEFBACF9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": {
            "0": {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "GpsSnsStackGpsLocationTopicC7DF29B6",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": {
                  "0": "ReportQueueStackReportQueueDDD250C3",
                  "1": "Arn",
                },
              },
            },
          },
          "Version": "2012-10-17",
        },
        "Queues": {
          "0": {
            "Ref": "ReportQueueStackReportQueueDDD250C3",
          },
        },
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "ReportTableStackReports29FDE124": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": {
          "0": {
            "AttributeName": "partitionKey",
            "AttributeType": "S",
          },
          "1": {
            "AttributeName": "sortKey",
            "AttributeType": "S",
          },
        },
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": {
          "0": {
            "AttributeName": "partitionKey",
            "KeyType": "HASH",
          },
          "1": {
            "AttributeName": "sortKey",
            "KeyType": "RANGE",
          },
        },
        "Replicas": {
          "0": {
            "Region": {
              "Ref": "AWS::Region",
            },
          },
        },
        "TableName": "Reports",
      },
      "Type": "AWS::DynamoDB::GlobalTable",
      "UpdateReplacePolicy": "Retain",
    },
    "ReportTableStackReportsGraphqlApiBB0F61B5": {
      "Properties": {
        "AuthenticationType": "API_KEY",
        "Name": "ReportsGraphqlApi",
        "XrayEnabled": true,
      },
      "Type": "AWS::AppSync::GraphQLApi",
    },
    "ReportTableStackReportsGraphqlApiDefaultApiKey667606E1": {
      "DependsOn": {
        "0": "ReportTableStackReportsGraphqlApiSchemaA3E32EA8",
      },
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": {
            "0": "ReportTableStackReportsGraphqlApiBB0F61B5",
            "1": "ApiId",
          },
        },
      },
      "Type": "AWS::AppSync::ApiKey",
    },
    "ReportTableStackReportsGraphqlApiListReportEntriesResolver88309E14": {
      "DependsOn": {
        "0": "ReportTableStackReportsGraphqlApiReportsDataSource0B37582D",
        "1": "ReportTableStackReportsGraphqlApiSchemaA3E32EA8",
      },
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": {
            "0": "ReportTableStackReportsGraphqlApiBB0F61B5",
            "1": "ApiId",
          },
        },
        "DataSourceName": "ReportsDataSource",
        "FieldName": "listReportEntries",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{
  "version": "2018-05-29",
  "operation": "Query",
  "query": {
    "expression": "partitionKey = :partitionKey",
    "expressionValues": {
      ":partitionKey": $util.dynamodb.toDynamoDBJson($ctx.args.partitionKey)
    }
  }
} ",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items) ",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ReportTableStackReportsGraphqlApiReportsDataSource0B37582D": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": {
            "0": "ReportTableStackReportsGraphqlApiBB0F61B5",
            "1": "ApiId",
          },
        },
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region",
          },
          "TableName": {
            "Ref": "ReportTableStackReports29FDE124",
          },
        },
        "Name": "ReportsDataSource",
        "ServiceRoleArn": {
          "Fn::GetAtt": {
            "0": "ReportTableStackReportsGraphqlApiReportsDataSourceServiceRoleEF9B491C",
            "1": "Arn",
          },
        },
        "Type": "AMAZON_DYNAMODB",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "ReportTableStackReportsGraphqlApiReportsDataSourceServiceRoleDefaultPolicy6F8CB67F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": {
            "0": {
              "Action": {
                "0": "dynamodb:BatchGetItem",
                "1": "dynamodb:GetRecords",
                "10": "dynamodb:DeleteItem",
                "11": "dynamodb:DescribeTable",
                "2": "dynamodb:GetShardIterator",
                "3": "dynamodb:Query",
                "4": "dynamodb:GetItem",
                "5": "dynamodb:Scan",
                "6": "dynamodb:ConditionCheckItem",
                "7": "dynamodb:BatchWriteItem",
                "8": "dynamodb:PutItem",
                "9": "dynamodb:UpdateItem",
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": {
                  "0": "ReportTableStackReports29FDE124",
                  "1": "Arn",
                },
              },
            },
          },
          "Version": "2012-10-17",
        },
        "PolicyName": "ReportTableStackReportsGraphqlApiReportsDataSourceServiceRoleDefaultPolicy6F8CB67F",
        "Roles": {
          "0": {
            "Ref": "ReportTableStackReportsGraphqlApiReportsDataSourceServiceRoleEF9B491C",
          },
        },
      },
      "Type": "AWS::IAM::Policy",
    },
    "ReportTableStackReportsGraphqlApiReportsDataSourceServiceRoleEF9B491C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": {
            "0": {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          },
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ReportTableStackReportsGraphqlApiSchemaA3E32EA8": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": {
            "0": "ReportTableStackReportsGraphqlApiBB0F61B5",
            "1": "ApiId",
          },
        },
        "Definition": "type GpsInfo {
  accuracy: Float
  altitude: Float
  heading: Float
  speed: Float
}

type WifiSignalInfo {
  ssid: String
  bssid: String
  frequency: Int
  level: Int
  timestamp: Float
}

type CellularSignalInfo {
  cellId: String
  locationAreaCode: String
  mobileCountryCode: String
  mobileNetworkCode: String
  signalStrength: Int
  timestamp: Float
}

type BatteryInfo {
  batteryLevel: Float
  batteryState: String
  chargingSource: String
  chargingStatus: Boolean
  batteryHealth: String
}

type WeatherInfo {
  temperature: Float
  humidity: Float
  pressure: Float
}

type LocationInfo {
  city: String
  country: String
  region: String
}

type TimeInfo {
  sentDate: Float
}

type UserInfo {
  userId: String
  email: String
  name: String
}

type ReportTableLocation {
  lat: Float
  long: Float
  gpsInfo: GpsInfo
  signalInfo: SignalInfo
  batteryInfo: BatteryInfo
  userInfo: UserInfo
  weatherInfo: WeatherInfo
  locationInfo: LocationInfo
  timeInfo: TimeInfo
}

union SignalInfo = WifiSignalInfo | CellularSignalInfo

type ReportTableData {
  userId: String
  sessionId: String
  created: Float
  lastUpdated: Float
  location: ReportTableLocation
}

type ReportTable {
  partitionKey: String
  sortKey: String
  data: ReportTableData
}

type Query {
  getReportEntry(partitionKey: String!, sortKey: String!): ReportTable
  listReportEntries(partitionKey: String): [ReportTable]
}

schema {
  query: Query
}
",
      },
      "Type": "AWS::AppSync::GraphQLSchema",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": {
        "0": {
          "Assert": {
            "Fn::Not": {
              "0": {
                "Fn::Contains": {
                  "0": {
                    "0": "1",
                    "1": "2",
                    "2": "3",
                    "3": "4",
                    "4": "5",
                  },
                  "1": {
                    "Ref": "BootstrapVersion",
                  },
                },
              },
            },
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      },
    },
  },
}
`;
