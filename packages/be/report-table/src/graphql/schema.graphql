type GpsInfo {
  accuracy: Float
  altitude: Float
  heading: Float
  speed: Float
}

type WifiSignalInfo {
  ssid: String
  bssid: String
  frequency: Int
  level: Int
  timestamp: Float
}

type CellularSignalInfo {
  cellId: String
  locationAreaCode: String
  mobileCountryCode: String
  mobileNetworkCode: String
  signalStrength: Int
  timestamp: Float
}

type BatteryInfo {
  batteryLevel: Float
  batteryState: String
  chargingSource: String
  chargingStatus: Boolean
  batteryHealth: String
}

type WeatherInfo {
  temperature: Float
  humidity: Float
  pressure: Float
}

type LocationInfo {
  city: String
  country: String
  region: String
}

type TimeInfo {
  sentDate: Float
}

type UserInfo {
  userId: String
  email: String
  name: String
}

type ReportTableLocation {
  lat: Float
  long: Float
  gpsInfo: GpsInfo
  signalInfo: SignalInfo
  batteryInfo: BatteryInfo
  userInfo: UserInfo
  weatherInfo: WeatherInfo
  locationInfo: LocationInfo
  timeInfo: TimeInfo
}

union SignalInfo = WifiSignalInfo | CellularSignalInfo

type ReportTableData {
  userId: String
  sessionId: String
  created: Float
  lastUpdated: Float
  location: ReportTableLocation
}

type ReportTable {
  partitionKey: String
  sortKey: String
  data: ReportTableData
}

type Query {
  getReportEntry(partitionKey: String!, sortKey: String!): ReportTable
  listReportEntries(partitionKey: String): [ReportTable]
}

schema {
  query: Query
}
